{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChangeFilter","selected","value","onChange","event","target","ExpenseDate","date","day","toLocaleString","month","year","getFullYear","ExpenseItem","title","amount","toFixed","ExpensesList","items","length","map","expense","id","ChartBar","maxValue","label","barFillHeight","Math","round","style","height","Chart","dataPoints","total","dataPoint","reduce","a","b","i","ExpenseChart","expenses","chartDataPoints","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","parseInt","selectedYear","ExpenseForm","onSaveExpenseData","onCancel","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","parseFloat","Date","type","min","step","max","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","enteredExpenseData","random","toString","DUMMY_EXPENSES","location","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0fb976e.chunk.js","sourcesContent":["import './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className; \n  return <div className={classes}>{props.children}</div>\n}\n\nexport default Card;","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = ({\n  onChangeFilter,\n  selected\n}) => {\n  const dropdownChangeHandler = (event) => {\n    onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={selected} onChange={dropdownChangeHandler}>\n          <option value=\"all\">All</option>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ExpenseDate.scss';\n\nconst ExpenseDate = ({\n  date\n}) => {\n  const day = date.toLocaleString('en-GB', { day: '2-digit' });\n  const month = date.toLocaleString('en-GB', { month: 'long' });\n  const year = date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__day\">{day}</div>\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;","import React from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\nimport Card from '../UI/Card';\n\nconst ExpenseItem = ({\n  date,\n  title,\n  amount\n}) => {\n\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={date}/>\n        <div className=\"expense-item__description\">\n          <h2>{title}</h2>\n          <div className=\"expense-item__price\">Â£{amount.toFixed(2)}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;","import './ExpensesList.css';\nimport React from 'react';\nimport ExpenseItem from './ExpenseItem';\n\nconst ExpensesList = ({\n  items\n}) => {\n\n  if (items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No expense found!</h2>;\n  }\n  return (\n    <ul className=\"expenses-list\">\n      {items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;","import React from 'react';\n\nimport './ChartBar.css';\n\n\nconst ChartBar = ({\n  maxValue,\n  value,\n  label\n}) => {\n  let barFillHeight = '0%';\n\n  if (maxValue > 0) {\n    barFillHeight = Math.round((value / maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}>\n        </div>\n      </div>\n      <div className=\"chart-bar__label\">{label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;","import React from 'react';\nimport ChartBar from './ChartBar';\n\nimport './Chart.css';\n\nconst Chart = ({\n  dataPoints\n}) => {\n  const total = dataPoints.map(dataPoint => dataPoint.value).reduce((a, b) => a + b, 0);\n\n  return (\n    <div className=\"chart\">\n      {dataPoints.map((dataPoint, i) =>\n        <ChartBar\n          key={i}\n          value={dataPoint.value}\n          maxValue={total}\n          label={dataPoint.label}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;","import React from 'react';\nimport Chart from '../Chart/Chart';\n\nconst ExpenseChart = ({\n  expenses\n}) => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints}/>;\n};\n\nexport default ExpenseChart;","import React, { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport './Expenses.css';\nimport ExpenseChart from './ExpenseChart';\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState('2021');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return filteredYear === 'all' || expense.date.getFullYear() === parseInt(filteredYear);\n  });\n\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n      <ExpenseChart expenses={filteredExpenses}/>\n      <ExpensesList items={filteredExpenses}/>\n    </Card>\n  );\n};\n\nexport default Expenses;","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\"\n\n\nconst ExpenseForm = ({\n  onSaveExpenseData,\n  onCancel\n}) => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: ''\n  // });\n  \n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    // setUserInput((prevState) => {\n    //   return {...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // }); \n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: parseFloat(enteredAmount),\n      date: new Date(enteredDate)\n    };\n\n    onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return (\n  <form onSubmit={submitHandler}>\n    <div className=\"new-expense__controls\">\n      <div className=\"new-expense__control\">\n        <label>Title</label>\n        <input \n          type=\"text\" \n          value={enteredTitle} \n          onChange={titleChangeHandler} \n        />\n      </div>\n      <div className =\"new-expense__control\">\n        <label>Amount</label>\n        <input \n          type=\"number\"  \n          min=\"0.01\" \n          step=\"0.01\" \n          value={enteredAmount}\n          onChange={amountChangeHandler} \n        />\n      </div>\n      <div className=\"new-expense__control\">\n        <label>Date</label>\n        <input \n          type=\"date\" \n          min=\"2019-01-01\" \n          max=\"2022-12-31\" \n          value={enteredDate}\n          onChange={dateChangeHandler} \n        />\n      </div>\n    </div>\n    <div className=\"new-expense__actions\">\n      <button type=\"button\" onClick={onCancel}>Cancel</button>\n      <button type=\"submit\">Add Expense</button>\n    </div>\n  </form>\n  );\n}; \n\nexport default ExpenseForm;","import React, { useState } from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = ({\n  onAddExpense\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    onAddExpense(expenseData);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n      {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\n    </div>\n  );\n};\n\nexport default NewExpense;","import React, {useState} from 'react';\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n// import { initialExpenses } from './data';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n    location: 'London'\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n    location: 'London'\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n    location: 'Paris'\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n    location: 'New York'\n  },\n];\n\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) =>{\n      return  [expense, ...prevExpenses]\n    });\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}